import logging
import requests
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext

BOT_TOKEN = "**********************************"
WEATHER_API_KEY = "*************************"

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)


def get_weather(lat: float, lon: float) -> str:
    if not WEATHER_API_KEY:
        return "–û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω API-–∫–ª—é—á –ø–æ–≥–æ–¥—ã."

    url = f"http://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={WEATHER_API_KEY}&units=metric&lang=ru"

    try:
        response = requests.get(url)
        data = response.json()

        if response.status_code == 200:
            city = data.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ")
            temp = data["main"]["temp"]
            weather_desc = data["weather"][0]["description"]
            if temp <= 0:
                return f"üìç–ì–æ—Ä–æ–¥ {city}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n‚ùÑÔ∏è –°–æ–≤–µ—Ç—É—é –æ–¥–µ—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ç–µ–ø–ª–µ–µ!\nüå• {weather_desc.capitalize()}"
            if 0 < temp < 15:
                return f"üìç–ì–æ—Ä–æ–¥ {city}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n‚òÄÔ∏è –°–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∏–π —Ç–µ–ø–ª—ã–π –¥–µ–Ω—å!\nüå• {weather_desc.capitalize()}"
            else:
                return f"üìç–ì–æ—Ä–æ–¥ {city}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\nüî• –°–µ–≥–æ–¥–Ω—è –∂–∞—Ä–∫–æ, –≤—Ä–µ–º—è –∏–¥—Ç–∏ –≥—É–ª—è—Ç—å!\nüå• {weather_desc.capitalize()}"




        else:
            logger.error(f"–û—à–∏–±–∫–∞ API OpenWeather: {data}")
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    except requests.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenWeather: {e}")
        return "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º –ø–æ–≥–æ–¥—ã."


async def start(update: Update, context: CallbackContext) -> None:
    user = update.message.from_user
    username = user.username
    first_name = user.first_name
    keyboard = [[KeyboardButton("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", request_location=True)]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {first_name}! –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ –ø–æ–≥–æ–¥–µ.", reply_markup=reply_markup
    )


async def location(update: Update, context: CallbackContext) -> None:
    user_location = update.message.location
    if user_location:
        lat, lon = user_location.latitude, user_location.longitude
        weather_info = get_weather(lat, lon)
        await update.message.reply_text(weather_info)


def main() -> None:
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.LOCATION, location))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()


if __name__ == "__main__":
    main()
